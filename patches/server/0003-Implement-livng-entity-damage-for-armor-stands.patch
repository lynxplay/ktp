From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bjarne Koll <lynxplay101@gmail.com>
Date: Sun, 10 Jan 2021 20:39:05 +0100
Subject: [PATCH] Implement livng entity damage for armor stands

As some armor stands may want to handle damage normally instead of
changing damage from certain damage types like fire, this commit allows
armor stands to use the EntityLiving damage method instead of its own
implementation.

diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index d35a0b2d94e4f52c257375c35f55b5a41c9f2c12..663194dd5557d5e8ad99cafc3d349733f787ddf8 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -50,6 +50,9 @@ public class EntityArmorStand extends EntityLiving {
     private boolean noTickPoseDirty = false;
     private boolean noTickEquipmentDirty = false;
     // Paper end
+    // ktp start - Allow ArmorStands to handle damage like a living entity
+    public boolean shouldTickLikeLivingEntity = false;
+    // ktp end

     public EntityArmorStand(EntityTypes<? extends EntityArmorStand> entitytypes, World world) {
         super(entitytypes, world);
@@ -224,6 +227,7 @@ public class EntityArmorStand extends EntityLiving {

         nbttagcompound.set("Pose", this.B());
         if (this.canTickSetByAPI) nbttagcompound.setBoolean("Paper.CanTickOverride", this.canTick); // Paper - persist no tick setting
+        if (this.shouldTickLikeLivingEntity) nbttagcompound.setBoolean("ktp.ShouldTickLikeLivingEntity", true); // ktp - persist damage like living
     }

     @Override
@@ -261,6 +265,7 @@ public class EntityArmorStand extends EntityLiving {
             this.canTickSetByAPI = true;
         }
         // Paper end
+        this.shouldTickLikeLivingEntity = nbttagcompound.getBoolean("ktp.ShouldTickLikeLivingEntity"); // ktp - persist damage like living
         NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound("Pose");

         this.g(nbttagcompound1);
@@ -455,6 +460,7 @@ public class EntityArmorStand extends EntityLiving {

     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
+        if (this.shouldTickLikeLivingEntity) return super.damageEntity(damagesource, f);
         if (!this.world.isClientSide && !this.dead) {
             if (DamageSource.OUT_OF_WORLD.equals(damagesource)) {
                 // CraftBukkit start
@@ -569,9 +575,24 @@ public class EntityArmorStand extends EntityLiving {
                 this.armorItems.set(i, ItemStack.a);
             }
         }
-        this.d(damagesource); // CraftBukkit - moved from above
+        if (!this.shouldTickLikeLivingEntity) this.d(damagesource); // CraftBukkit - moved from above // ktp - respect damage like living entity

     }
+    // ktp start - respect damage like living entity
+    @Override
+    protected org.bukkit.event.entity.EntityDeathEvent d(DamageSource damagesource) {
+        if (this.shouldTickLikeLivingEntity){
+            if (damagesource.isExplosion()
+                    || DamageSource.FIRE.equals(damagesource)
+                    || DamageSource.BURN.equals(damagesource)) {
+                this.g(damagesource);
+            } else {
+                this.f(damagesource);
+            }
+        }
+        return super.d(damagesource);
+    }
+    // ktp end - respect damage like living entity

     private void F() {
         this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_ARMOR_STAND_BREAK, this.getSoundCategory(), 1.0F, 1.0F);
@@ -835,11 +856,13 @@ public class EntityArmorStand extends EntityLiving {
     }

     @Override
-    public void onLightningStrike(EntityLightning entitylightning) {}
+    public void onLightningStrike(EntityLightning entitylightning) {
+        if (this.shouldTickLikeLivingEntity) super.onLightningStrike(entitylightning); // ktp - respect living entity damage for lighting
+    }

     @Override
     public boolean dM() {
-        return false;
+        return this.shouldTickLikeLivingEntity; // ktp - respect living entity damage for potions
     }

     @Override
@@ -854,7 +877,7 @@ public class EntityArmorStand extends EntityLiving {

     @Override
     public boolean dN() {
-        return false;
+        return this.shouldTickLikeLivingEntity; // ktp - respect normal damage for wither
     }

     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
index ac105270d5c7e2070f52782fc7dbdcd381db33a5..271775c3f7a946970cbfd5736cf0b27f3192011c 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
@@ -309,4 +309,16 @@ public class CraftArmorStand extends CraftLivingEntity implements ArmorStand {
         this.getHandle().canTickSetByAPI = true;
     }
     // Paper end
+    // ktp start
+    @Override
+    public void setShouldDamageLikeLivingEntity(boolean flag) {
+        this.getHandle().shouldTickLikeLivingEntity = flag;
+    }
+
+    @Override
+    public boolean doesDamageLikeLivingEntity() {
+        return this.getHandle().shouldTickLikeLivingEntity;
+    }
+
+    // ktp stop
 }
